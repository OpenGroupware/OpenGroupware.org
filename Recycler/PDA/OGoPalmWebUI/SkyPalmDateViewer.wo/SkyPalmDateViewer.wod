// $Id: SkyPalmDateViewer.wod,v 1.2 2003/12/10 18:27:08 martin Exp $

Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title   = labels.SkyPalmDateViewer;
  onClose = session.navigation.leavePage;
}

// tab items
TabView: SkyTabView {
  selection = currentTab;
}
AttributeTab: SkySimpleTabItem {
  key   = "attributes";
  label = labels.tab_attributes;
}
RepetitionTab: SkySimpleTabItem {
  key   = "repetitions";
  label = labels.tab_repetitions;
}
PalmSyncTab: SkySimpleTabItem {
  key   = "palmSync";
  label = labels.tab_palmSync;
}
SkyrixSyncTab: SkySimpleTabItem {
  key   = "skyrixSync";
  label = labels.tab_skyrixSync;
}

ViewerTitle: LSWViewerTitle {
  title  = date.description;
}

Buttons: SkyButtonRow {
  ordering = ( delete, undelete, edit, assign, create, sync, detach );
  hasEdit = date.isEditable;
  onEdit  = editRecord;
  edit    = labels.action_edit;

  hasDelete = date.isDeletable;
  onDelete  = deleteRecord;
  delete    = labels.action_delete;

  hasUndelete = date.isUndeletable;
  onUndelete  = undeleteRecord;
  undelete    = labels.action_undelete;

  hasAssign   = date.canAssignSkyrixRecord;
  onAssign    = assignSkyrixRecord;
  assign      = labels.action_assignSkyrixAppointment;

  hasCreate   = date.canCreateSkyrixRecord;
  onCreate    = createNewSkyrixRecord;
  create      = labels.action_createNewSkyrixRecord;

  hasSync     = date.canSynchronizeWithSkyrixRecord;
  onSync      = syncWithSkyrixRecord;
  sync        = labels.action_syncWithSkyrixEntry;

  hasDetach   = date.hasSkyrixRecord;
  onDetach    = detachSkyrixRecord;
  detach      = labels.action_detachSkyrixEntry;
}

DateTitle: SkyAttribute {
  label  = labels.attribute_title;
  string = date.description;
}

DateView: SkyPalmInlineDateViewer {
  date       = date;
  showNoSync = YES;
}

// repeatings

IsRepeating: WOConditional {
  condition = date.repeatType;
  value     = 0;
  negate    = YES;
}
RepeatingsFetched: WOConditional {
  condition = repeatings.count;
  value     = 0;
  negate    = YES;
}
IsJavaScriptEnabled: WOConditional {
  condition = session.isJavaScriptEnabled;
}
//Calendar: WOJavaScript {
//  scriptFile = "calendar.js";
//}
Calendar: SkyCalendarScript {}

Form: WOForm {
  name = "editform";
}
From: WOTextField {
  name  = "from";
  value = from;
  size  = 12;
}
//FromCalendarLink: WOHyperlink {
//  filename = "icon_popupcalendar.gif";
//  href     = "javascript:doNothing()";
//  ALT      = labels.calendarPopupStartdateLabel;
//  BORDER   = 0;
//  onClick  = fromOnClickEvent;
//  onMouseOver = "window.status='browse startdate'; return true";
//  onMouseOut  = "window.status='SKYRIX'; return true";
//}
FromCalendarLink: SkyCalendarPopUp {
  elementName = "from";
  formName    = "editform";
}
To: WOTextField {
  name  = "to";
  value = to;
  size  = 12;
}
//ToCalendarLink: WOHyperlink {
//  filename = "icon_popupcalendar.gif";
//  href     = "javascript:doNothing()";
//  ALT      = labels.calendarPopupEnddateLabel;
//  BORDER   = 0;
//  onClick  = toOnClickEvent;
//  onMouseOver = "window.status='browse enddate'; return true";
//  onMouseOut  = "window.status='SKYRIX'; return true";
//}
ToCalendarLink: SkyCalendarPopUp {
  elementName = "to";
  formName    = "editform";
}

// labels
ShowRepeatingsAttr: SkySubAttribute {
  label = labels.showRepeatings;
}
FromLabel: WOString {
  value = labels.from;
}
ToLabel: WOString {
  value = labels.to;
}

RepeatingsAttr: SkySubAttribute {
  label = labels.label_repetitions;
}
Repeatings: SkyPalmDateList {
  date            = item;
  dataSource      = repeatingsDataSource;
  state           = repeatingsState;
  action          = "viewRepeating";
  hideTitle       = YES;
  hideButtons     = YES;
  selections      = selections;
}
Show: WOImageButton {
  action   = showRepeatings;
  filename = "show.gif";
  name     = labels.showButtonLabel;
  ALT      = labels.showButtonLabel;
  title    = labels.showButtonLabel;
  BORDER   = 0;
}

DetachEntries: WOImageButton {
  action   = selectionDetach;
  filename = "icon_palm_detach_date.gif";
  name     = labels.action_detachDates;
  ALT      = labels.action_detachDates;
  title    = labels.action_detachDates;
  BORDER   = 0;
}

DeleteEntries: WOImageButton {
  action   = selectionDelete;
  filename = "icon_palm_delete_date.gif";
  name     = labels.action_deleteDates;
  ALT      = labels.action_deleteDates;
  title    = labels.action_deleteDates;
  BORDER   = 0;
}

// palmSync

DeviceAttr: SkyPalmStringAttribute {
  label  = labels.attribute_deviceId;
  string = date.deviceId;
  insertRow = YES;
}
PalmSyncAttr: SkyPalmStringAttribute {
  label  = labels.attribute_palmSync;
  string = labels.$syncState;
  insertRow = YES;
}

// skyrix record binding

HasSkyrixRecord: WOConditional {
  condition = date.hasSkyrixRecord;
}
SkyAppointmentAttr: SkySubAttribute {
  label = labels.label_skyrixAppointment;
}
ViewAppointment: WOHyperlink {
  action = viewSkyrixRecord;
}
Icon: WOImage {
  filename = "apt_10x10.gif";
  ALT      = date.skyrixRecord.title;
  title    = date.skyrixRecord.title;
  BORDER   = 0;
}
Appointment: SkyRichString {
  value = date.skyrixRecord.title;
}

SkyrixSyncAttr: SkyPalmStringAttribute {
  label  = labels.attribute_skyrixSyncType;
  string = labels.$syncTypeKey;
  insertRow = YES;
}
SkyrixSyncStateAttr: SkyPalmStringAttribute {
  label  = labels.attribute_skyrixSync;
  string = labels.$syncStateKey;
  insertRow = YES;
}
BothChangedCond: WOConditional {
  condition = record.skyrixSyncState;
  value = 103; // both changed
}

ForcePalmOverOGoIcon: WOHyperlink {
  filename = "icon_palm_palmoverskyrix.gif";
  border   = 0;
  alt      = labels.action_forcePalmOverOGo;
  title    = labels.action_forcePalmOverOGo;
  action   = forcePalmOverOGo;
}
ForcePalmOverOGoLink: WOHyperlink {
  action = forcePalmOverOGo;
  string = labels.action_forcePalmOverOGo;
}

ForceOGoOverPalmIcon: WOHyperlink {
  filename = "icon_palm_skyrixoverpalm.gif";
  border   = 0;
  alt      = labels.action_forceOGoOverPalm;
  title    = labels.action_forceOGoOverPalm;
  action   = forceOGoOverPalm;
}
ForceOGoOverPalmLink: WOHyperlink {
  action = forceOGoOverPalm;
  string = labels.action_forceOGoOverPalm;
}
