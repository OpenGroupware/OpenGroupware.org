// $Id: SkyInlineWeekColumnView.wod 2 2004-08-20 11:37:44Z znek $

Font: SkyConfigFont {}

WeekColumnView: WEWeekColumnView {
  list       = appointments;
  item       = appointment;
  weekStart  = weekStart;
  dayIndex   = dayIndex;
  isInfoItem = isAllDayApt;
  infoItems  = allDayApts;

  titleColor   = titleColor;   // "#FFDAAA";
  contentColor = dayCellColor; // contentColor; // "#FAE8B8";

  WIDTH       = "100%";
  BORDER      = "0";
  CELLSPACING = 2;
  CELLPADDING = 4;
}

TitleMode:   WEWeekColumnViewTitleMode   {};
InfoMode:    WEWeekColumnViewInfoMode    {};
ContentMode: WEWeekColumnViewContentMode {};

Appointment: SkySchedulerDateCell {
  appointment  = appointment;
  weekday      = weekday;
  participants = appointment.participants;
  isClickable  = appointmentViewAccessAllowed;
  isPrivate    = isPrivateAppointment;
  action       = viewAppointment;
  privateLabel = labels.private;
  icon         = dateCellIcon;
  aptTypeLabel = aptTypeLabel;
}

WeekdayTitle: LSWSchedulerDateTitle {
  title            = labels.$weekday;
  newLabel         = labels.new;
  highlight        = weekday.isToday;
  date             = weekday;
  disableNew       = isResCategorySelected;
  directActionName = dayDirectActionName
}

HasDayInfoCond: WOConditional {
  condition = hasCurrentDayInfo;
}
HasHolidayInfo: WOConditional {
  condition = hasHolidays;
}
HasAllDayApts: WOConditional {
  condition = hasAllDayApts;
}

HolidayInfo: SkyRichString {
  value  = currentDayInfo;
  size   = "-2";
  isBold = YES;
}

AllDayApts: WORepetition {
  list = allDayApts;
  item = appointment;
}

// Month-Browser

Browser: SkyMonthBrowser {
  month    = weekStart.monthOfYear;
  year     = weekStart.yearOfCommonEra;
  months   = 2;
  timeZone = weekStart.timeZone;
  
  showWeekOfYear = YES;

  date      = browserDate;
  isInMonth = browserDateInMonth;
}

BrowserDayLabel: SkyRichString {
  value = browserDayLabel;
  color = browserFontColor;
}

IsInMonthCond: WOConditional {
  condition = browserDateInMonth;
}

IsInMonthCondElse: WOConditional {
  condition = browserDateInMonth;
  negate    = YES;
}

// design of appointment

ViewAccessAllowedCond: WOConditional {
  condition = appointmentViewAccessAllowed;
}
ViewAccessAllowedCondElse: WOConditional {
  condition = appointmentViewAccessAllowed;
  negate    = YES;
}

AptInfoIcon: WOImage {
  filename = dateCellIcon;
  border   = "0";
  valign   = "top";
  alt      = shortTextForApt;
  title    = shortTextForApt;
}
StartTime: SkyRichString {
  value     = startTime;
  color     = config.colors_appointmentLink;
}

EndTime: SkyRichString {
  value     = endTime;
  color     = config.colors_appointmentLink;
}

AptTitleSpan: WOGenericContainer {
  elementName = "span";
  class     = aptTitleCellClass;
}
AptTitle: WOString {
  value     = appointment;
  formatter = aptTitleFormatter;
  //color     = config.colors_titleColor;
}
Semicolon: SkyRichString {
  value = ";";
  color = config.colors_contentText;
}

AptContentText: SkyRichString {
  value     = appointment;
  formatter = aptContentFormatter;
  color     = config.colors_contentText;
}

ViewAptLink: WOHyperlink {
  directActionName = "viewApt";
  ?oid    = appointmentOID;
  ?entity = appointmentEntity;
  ?tz     = appointment.startDate.timeZone.abbreviation;
  ?ctx    = context.contextID;
  title   = shortTextForApt;
  class   = "skydatecell_link";
}
ViewAptAction: WOHyperlink {
  action = viewAppointment;
  title  = shortTextForApt;
  class  = "skydatecell_link";
}
UseDACond: WOConditional {
  condition = useDirectActionForView;
}
UseDACondElse: WOConditional {
  condition = useDirectActionForView;
  negate    = YES;
}

DropZone: WEDropContainer {
  elementName   = "td";
  isAttached    = YES;
  tags          = ( appointment );
  swapColors    = YES;
  droppedObject = appointment;
  action        = droppedAppointment;
}

DragZone: WEDragContainer {
  tag    = "appointment";
  object = appointment;
}
