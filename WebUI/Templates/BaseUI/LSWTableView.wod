// $Id: LSWTableView.wod,v 1.1.1.1 2003/07/09 22:57:44 cvs Exp $

TableViewContent: WOComponentContent {}

Header: LSWTableViewHeader {
  title          = title;
  bgcolor        = config.colors_tableViewHeaderCell;
  textColor      = config.font_color;
  textFace       = config.font_face;
  textSize       = config.font_size;
  isOnFirstPage  = isFirstPage;
  isOnLastPage   = isLastPage;
  firstIcon      = "first.gif";
  firstIconBlind = "first_blind.gif";
  firstLabel     = labels.gotoFirstLabel;
  lastIcon       = "last.gif";
  lastIconBlind  = "last_blind.gif";
  lastLabel      = label.gotoLastLabel;
  nextIcon       = "next.gif";
  nextIconBlind  = "next_blind.gif";
  nextLabel      = labels.gotoNextLabel;
  prevIcon       = "previous.gif";
  prevIconBlind  = "previous_blind.gif";
  prevLabel      = labels.gotoPreviousLabel;
}

Footer: LSWTableViewFooter {
  bgcolor        = config.colors_tableViewFooterCell;
  textColor      = config.font_color;
  textFace       = config.font_face;
  textSize       = config.font_size;
  label          = label;
  toLabel        = labels.toLabel;
  ofLabel        = labels.ofLabel;
  pageLabel      = labels.pageLabel;
  pageIndex      = currentPageNumber;
  pageCount      = lastPageNumber;
  firstIndex     = objectsFrom;
  lastIndex      = objectsTo;
  count          = listCount;
}

ObjectRep: WORepetition {
  list       = sortedArray;
  item       = item;
  index      = index;
  count      = blockSize;
  startIndex = start;
}

RelatedObjectRep: WORepetition {
  list       = arrayAttrList;
  item       = relatedObject;
  index      = idx;
  separator  = separator;
}

Attributes: LSWTableViewAttributeRow {
  textColor      = config.font_color;
  textFace       = config.font_face;
  textSize       = config.font_size;
  list           = attributes;
  item           = attributeConfig;
  label          = attributeLabel;
  isSortable     = isSortableAttribute;
  orderIcon      = currentOrderingString;
  orderIconLabel = labels.sortColumnLabel;
  bgcolor        = currentAttributeCellColor;
}

AttributeRepetition: WORepetition {
  list  = attributes;
  item  = attributeConfig;
}

AttributeCell: WOGenericContainer {
  elementName = "td";
  valign      = "top";
  align       = align;
}

Cell: LSWTableViewCell {
  textColor            = config.font_color;
  textFace             = config.font_face;
  textSize             = config.font_size;
  valueColor           = textColor;
  isItem               = isArrayAttribute;
  action               = linkAction;
  disabled             = isActionDisabled;
  href                 = linkHref;
  target               = linkTarget;
  icon                 = image;
  iconLabel            = imageLabel;
  value                = cellObjectValue;
  formatter            = attributeValueFormatter;
  onClick              = viewObject;
  onMailTo             = mailTo;
  isInternalMailEditor = isInternalMailEditor;
}

ArrayAttrCond: WOConditional {
  condition = isArrayAttribute;
}

ArrayAttrCondElse: WOConditional {
  condition = isArrayAttribute;
  negate    = YES;
}

IsNew: WOConditional {
  condition = isNew;
}

Buttons: SkyButtonRow {
  ordering   = ( refresh, import );
  onNew      = new;
  hasNew     = isNew;
  new        = labels.tableview_newLinkLabel;
  onImport   = import;
  hasImport  = isImport;
  import     = labels.tableview_importLinkLabel;
  onRefresh  = refresh;
  hasRefresh = isRefresh;
  refresh    = labels.tableview_refreshLinkLabel;
}

IsImport: WOConditional {
  condition = isImport;
}

ContentCell: WOGenericContainer {
  elementName = "td";
  valign      = "top";
  bgcolor     = config.colors_tableViewContentCell;
  colspan     = "3";
}

ObjectRow: WOGenericContainer {
  elementName = "tr";
  bgcolor     = rowColor; // either even or odd
}

Font: WOGenericContainer {
  elementName = "font";
  color       = config.font_color;
  size        = config.font_size;
  face        = config.font_face;
}
