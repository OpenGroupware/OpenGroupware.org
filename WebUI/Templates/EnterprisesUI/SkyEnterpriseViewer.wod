// bind template to controller

Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title = labels.enterpriseviewer_title;
  onClose = session.navigation.leavePage;
}
Title: LSWViewerTitle {
  title = viewerTitle;
}

// tabs

TabBody: SkyTabView {
  selection = tabKey;
}

PersonsTab: SkySimpleTabItem {
  key   = "persons";
  icon  = "persons";
  label = labels.enterpriseviewer_tab_persons;
}
DocumentsTab: SkySimpleTabItem {
  key    = "documents";
  label  = labels.enterpriseviewer_tab_documents;
  action = viewDocuments;
}
ProjectsTab: SkySimpleTabItem {
  key   = "projects";
  label = labels.enterpriseviewer_tab_projects;
}
OverviewTab: SkySimpleTabItem {
  key      = "overview";
  label    = labels.enterpriseviewer_tab_overview;
  action   = viewOverview;
  isScript = YES;
}
AddressTab: SkySimpleTabItem {
  key      = "address";
  label    = labels.enterpriseviewer_tab_address;
  isScript = YES;
}
AttributesTab: SkySimpleTabItem {
  key      = "attributes";
  label    = labels.enterpriseviewer_tab_attributes;
  isScript = YES;
}
LogTab: SkySimpleTabItem {
  key   = "log";
  label = labels.enterpriseviewer_tab_log;
}

LinkTab: SkySimpleTabItem {
  key   = "links";
  label = labels.enterpriseviewer_tab_links;
}

// content

PersonList: SkyPersonList {
  dataSource     = enterprise.personDataSource;
  configKey      = "contactpersons_list";
  isInConfigMode = isInConfigMode;
}

PersonalAttributes: SkyPersonalAttributesViewer {
  object = enterprise;
}

AddressesViewer: SkyAddressesViewer {
  company = enterprise;
  columns = 3;
}

ProjectList: SkyEnterpriseProjectList {
  enterprise    = enterprise;
  isEditEnabled = isEditEnabled;
}

LogList:      SkyObjectLogList  { object = enterprise; }
RelatedLinks: OGoObjectLinkList { object = enterprise; }

PersonButtons: SkyButtonRow {
  ordering  = ( config, assign );
  onAssign  = assignPerson;
  hasAssign = isEditEnabled;
  assign    = labels.assignPerson;
  
  config    = labels.config;
  onConfig  = showColumnConfigEditor;
}

ShortEnterpriseViewer: LSWObjectViewer {
  object         = enterprise;
  labels         = labels;
  attributeColor = "attributeCell";
  valueColor     = "valueCell";
  hideEmpty      = YES;
  attributes     = ( { key = "number"; label = "enterprise_number"; } );
}

AttributeCell: SkyAttributeCell {}
ValueCell:     SkyValueCell     {}

Buttons: SkyButtonRow {
  ordering = ( clip, edit, mail );
  /* default buttons */
  onClip  = placeInClipboard;
  hasEdit = isEditEnabled;
  onEdit  = edit;
  onMail  = mailObject;
  urlMail = objectUrl;

  /* labels */
  clip   = labels.clip;
  edit   = labels.edit;
  mail   = labels.send;
}

SubButtons: SkyButtonRow {
  orderign = ( edit );
  hasEdit  = isEditEnabled;
  onEdit   = edit;
  edit     = labels.edit;
}

MainButtonRow: WOGenericContainer {
  elementName = "tr";
  BGCOLOR     = config.colors_mainButtonRow;
}

Font: SkyConfigFont {}

IsPrivate:  WOConditional { condition = enterprise.isPrivate.boolValue;  }
IsReadonly: WOConditional { condition = enterprise.isReadonly.boolValue; }

PrivateLabel:  WOString { value = labels.private;  }
ReadonlyLabel: WOString { value = labels.readonly; }

IndexDocContent: WOString {
  value    = indexDocContent;
  insertBR = YES;
}

SubAttributeCell: WOGenericContainer {
  elementName = "td";
  ALIGN       = "right";
  VALIGN      = "top";
  BGCOLOR     = config.colors_subAttributeCell;
  WIDTH       = "15%";
}

SubValueCell: WOGenericContainer {
  elementName = "td";
  ALIGN       = "left";
  BGCOLOR     = config.colors_subValueCell;
}

EditDocLink: SkyButtonRow {
  ordering    = ( docedit );
  onDocedit   = editIndexDocument;
  docedit     = labels.edit;
  hasDocedit  = isEditEnabled;
}

DocumentTitleLink: WOHyperlink {
  action   = viewIndexDocument;
  string   = indexDocTitle;
  disabled = isEditDisabled;
        
}

IsIndexDocEditDisabledElse: WOConditional {
  condition = isIndexDocEditDisabled;
  negate   = YES;
}

IsEditEnabledCond: WOConditional {
  condition = isEditDisabled;
  negate    = YES;
}

FormLetterLink: WOHyperlink {
  actionClass      = "OGoFormLetterAction";
  directActionName = "download";
  ?wosid           = YES;
  ?ds              = "company";
  ?companyId       = enterprise.companyId;
  ?kind            = session.userDefaults.formletter_kind;
  ?format          = "formLetter";
  ?v               = enterprise.objectVersion;
  target           = formLetterTarget;
  style            = "text-decoration:none"; // TODO: move to CSS
}

FormLetterName: WOString { value = labels.FormLetterLink; }
DownloadLabel:  WOString { value = labels.download;       }

VCardLink: WOHyperlink { // TODO: replace with better vCard support
  actionClass      = "OGoFormLetterAction";
  directActionName = "download";
  ?wosid           = YES;
  ?ds              = "company";
  ?companyId       = enterprise.companyId;
  ?kind            = session.userDefaults.formletter_kind;
  ?format          = "vCard";
  ?v               = enterprise.objectVersion;
  target   = formLetterTarget;
  mimeType = "text/directory";
  STYLE    = "text-decoration:none";
}

VCardName: WOString {
    value = "vcard";
}

AccessList: SkyAccessList {
  accessList   = accessIds;
  isInTable    = NO;
  accessChecks = accessChecks;
  labels       = labels;
  isViewerMode = YES;
}

AccessTab: SkySimpleTabItem {
  key       = "access";
  action    = accessTabClicked;
  label     = labels.accessTab;
}
AccessTitle: LSWViewerTitle {
  title    = labels.access;
  gentable = YES;
}

AccessButtons: SkyButtonRow {
  onEdit   = editAccess;
  ordering = ( edit );
  edit     = labels.edit;
  hasEdit  = isEditEnabled;
}

IsEditAllowed:     WOConditional { condition = isEditEnabled; }
IsEditAllowedElse: WOConditional { condition = isEditEnabled; negate = YES; }

DocumentTitle: WOString {
  value = indexDocTitle;
}

IsProjectEnabled:     WOConditional { condition = isProjectEnabled;     }
IsLogTabEnabled:      WOConditional { condition = isLogTabEnabled;      }
IsAccessRightEnabled: WOConditional { condition = isAccessRightEnabled; }
IsLinkTabEnabled:     WOConditional { condition = isLinkTabEnabled;     }
