// bind template to controller

CollapsibleButtonMode:  SkyCollapsibleButtonMode  {}
CollapsibleContentMode: SkyCollapsibleContentMode {}

PatternsRep: WOTable {
  list       = patterns;
  item       = item;
  index      = patternIndex;
  maxColumns = maxColumns;

  cellVAlign = "top";
  width      = "100%";
}

PatternTitle: SkyCollapsibleContent {
  visibility     = patternVisibility;
  structuredMode = YES;
  title          = item;
}

ConfButtons: SkyButtonRow {
  ordering     = ( "edit", "configure" );
  hasEdit      = YES;
  hasConfigure = YES;
  onEdit       = edit;
  hasEdit      = isEditAllowed;
  onConfigure  = viewerConfigModeActivate;
  edit         = labels.edit;
  configure    = labels.viewer_config;
}

IsInConfigMode:    WOConditional { condition = viewerConfigMode; }
IsNotInConfigMode: WOConditional { condition = viewerConfigMode; negate = YES;}

HasPatterns: WOConditional {
  condition = hasPatterns;
}

ViewerConfig: SkyPersonalViewerConfig {
  object         = object;
  viewerPattern  = currentPattern;
  checkedItems   = patternValues;
  isInConfigMode = viewerConfigMode;
}

ConfigTitle: LSWViewerTitle {
  title     = item;
  bgcolor   = config.colors_configHeader;
}

AttributesViewer: SkyCompanyAttributesViewer {
  company       = object;
  viewerPattern = item;
}
