// $Id: LSWNewsArticleViewer.wod 2 2004-08-20 11:37:44Z znek $

Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title = labels.ArticleViewerWindowTitle;
  onClose = session.navigation.leavePage;
}

IsLicensed: SkyLicenseConditional {
  modules = ( News );
}

Title: LSWViewerTitle {
  title = article.name;
}

EditLink: SkyButtonRow {
  ordering = ( edit );
  onEdit   = edit;
  edit     = labels.gotoEditLabel;
};

ArticleId: WOString {
  value = article.newsArticleId;
};

ArticleCaption: WOString {
  value = article.caption;
};

ArticleContent: WOString {
  value    = fileContent;
  insertBR = YES;
};

ArticleImage: WOImage {
  src    = articleImage;
  border = "0";
}

HasImage: WOConditional {
  condition = hasImage;
}

ClipLink: WOHyperlink {
  action   = placeInClipboard;
  filename = "clip.gif";
  border   = 0;
  alt      = labels.ClipboardLabel;
  align    = "top";
};

AttributeCell: SkyAttributeCell {}

ValueCell:  SkyValueCell { 
  alignTop = YES; 
}

MainButtonRow: WOGenericContainer {
  elementName = "tr";
  bgcolor     = config.colors_mainButtonRow;
}

Font:     SkyConfigFont     {}
EditFont: SkyConfigEditFont {}

IsRootCond: WOConditional {
  condition = self.session.activeAccountIsRoot;
}

IsNotRootCond: WOConditional {
  condition = self.session.activeAccountIsRoot;
  negate    = YES;
}

NewsArticleRep: WORepetition {
  list = relatedArticles;
  item = newsArticle;
}

NewsArticleLink: WOHyperlink {
  action = viewNewsArticle;
  string = newsArticle.name;
}

NewsArticleCaption: WOString {
  value = newsArticle.caption;
}

NewsArticleLabel: WOString {
  value = labels.relatedArticlesLabel;
}

ContentRep: WORepetition {
  list = fileContent;
  item = item;
};

IsText: WOConditional {
  condition = item.kind;
  value     = "text";
};

Text: WOString {
  value    = item.value;
  insertBR = YES;
};

IsLink: WOConditional {
  condition = item.kind;
  value     = "url";
};

Link: SkyExternalLink {
  href   = item.value;
  string = item.value;
  target = "link";
}

IsActionLink: WOConditional {
  condition = isActionLink;
};

IsActionLinkElse: WOConditional {
  condition = isActionLink;
  negate    = YES;
};

ActionLink: WOHyperlink {
  action = sendMail;
  string = item.value;
};

IsInlineCond: WOConditional {
  condition = isInline;
}

IsNotInlineCond: WOConditional {
  condition = isInline;
  negate    = YES;
}

IsAccountNewsEditor: WOConditional {
  condition = isAccountNewsEditor;
};
