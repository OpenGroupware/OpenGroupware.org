// bind template to controller

// TODO: this components need to be split up!

Frame: LSWSkyrixFrame {}

ProposalForm: WOForm {
  name     = "editform";
  action   = searchParticipant;
  //onSubmit = "return validateEditorContent()";
}

MainButtonRow: WOGenericContainer {
  elementName = "tr";
  BGCOLOR     = config.colors_mainButtonRow;
}

Window: LSWWindowFrame {
  title   = labels.proposalWindowTitle;
  onClick = cancel;
  onClose = cancel;
}

WarningModeCondElse: WOConditional {
  condition = isInWarningMode;
  negate    = YES;
}
WarningModeCond: WOConditional {
  condition = isInWarningMode;
}

Warning: LSWWarningPanel {
  onOk   = warningOkAction;
  phrase = warningPhrase;
}

SearchSubmit: WOSubmitButton {
  action = search;
  value  = labels.searchButtonLabel;
  class  = "button_narrow";
}

CancelSubmit: WOHyperlink {
  action = cancel;
  string = labels.cancelButtonLabel;
  class  = "button_narrow";
}

AttributeCell: SkyAttributeCell {}
ValueCell:     SkyValueCell     {}

ValueCell3: WOGenericContainer {
  elementName = "TD";
  COLSPAN     = 3;
  ALIGN	      = "left";
  BGCOLOR     = config.colors_valueCell;
}

Font:     SkyConfigFont     {}
EditFont: SkyConfigEditFont {}

AppointmentHeader:   WOString { value = labels.appointmentHeader; }
TitleLabel:          WOString { value = labels.title;             }
Title:               WOString { value = appointment.title;        }
LocationLabel:       WOString { value = labels.location;          }
Location:            WOString { value = appointment.location;     }
ParticipantsLabel:   WOString { value = labels.participants;      }
ParticipantName:     WOString { value = participantName;          }
ResourcesLabel:      WOString { value = labels.resources;         }
ResourcesName:       WOString { value = item;                     }


ParticipantsRep: WORepetition {
  list  = appointment.participants;
  item  = item;
  index = idx;
}

IsLastPartElse: WOConditional {
  condition = isLastParticipant;
  negate    = YES;
}

IsLastResElse: WOConditional {
  condition = isLastResource;
  negate    = YES;
}

EndDateLabel: WOString {
  value = labels.endDate;
}

EndDate: WOTextField {
  name  = "endDate";
  value = endDate;
  SIZE  = 12;
}

CalendarPopupEndDateLink: SkyCalendarPopUp {
  elementName = "endDate";
  formName    = "editform";
}

StartDateLabel: WOString {
  value = labels.startDate;
}

StartDate: WOTextField {
  name  = "startDate";
  value = startDate;
  SIZE  = 12;
}

CalendarPopupStartDateLink: SkyCalendarPopUp {
  elementName = "startDate";
  formName    = "editform";
}

DurationLabel: WOString {
  value = labels.duration;
}

DurationPopUp: WOPopUpButton {
  list      = (
       "00:15", "00:30", "00:45", "01:00", "01:15", "01:30", "01:45", "02:00",
       "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "06:00", "07:00",
       "08:00", "09:00", "10:00");
  selection = duration;
}

EarliestStartTimePopUp: WOPopUpButton {
  list      = (
      "00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30",
      "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30",
      "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30",
      "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30",
      "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30",
      "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30");
  selection = earliestStartTime;
}

EarliestStartTimeLabel: WOString {
  value = labels.earliestStartTime;
}


LatestFinishTimeLabel: WOString {
  value = labels.latestFinishTime;
}

LatestFinishTimePopUp: WOPopUpButton {
  list      = (
      "00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30",
      "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30",
      "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30",
      "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30",
      "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30",
      "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30");
  selection = latestFinishTime;
}


IntervalLabel: WOString {
  value = labels.interval;
}

Interval: WOTextField {
  value = interval;
  SIZE  = 12;
}

ResultRep: WORepetition {
  list = searchList;
  item = item;
  index = idx;
}

TakeAppointment: WOHyperlink {
  action = takeAppointment;
}
Image: WOImage {
  filename = "take.gif";
  border   = 0;
}

AppointmentStartDate: WOString { value = appointmentStartDate; }
AppointmentStartTime: WOString { value = appointmentStartTime; }
AppointmentEndDate:   WOString { value = appointmentEndDate;   }
AppointmentEndTime:   WOString { value = appointmentEndTime;   }

IsResultCond: WOConditional {
  condition = resultListHasComponents;
}

HourCaptionRepetition: WORepetition {
  list = hourCaptionList;
  item = item;
}

HourCaptionCell: WOGenericContainer {
  elementName = "TD";
  COLSPAN      = "2";
  BGCOLOR      = config.colors_fullHourCell;
  ALIGN       = "middle";
}

HourCaptionCellValue: WOString {
  value = item;
}

MinuteCaptionRepetition: WORepetition {
  list = minuteCaptionList;
  item = item;
}

MinuteCaptionCell: WOGenericContainer {
  elementName = "TD";
  COLSPAN     = "1";
  BGCOLOR     = config.colors_halfHourCell;
  ALIGN       = "middle";
}

DayCaptionCell: WOGenericContainer {
  elementName = "TD";
  COLSPAN     = "1";
  ROWSPAN     = "2";
  BGCOLOR     = config.colors_halfHourCell;
  ALIGN       = "middle";
}

MinuteCaptionCellValue: WOString { value = item; }

DayRepetition: WORepetition {
  list = calcTableKeys; /* sorted keys of calculatedTable */
  item = calcItem;
}
DayValueRepetition: WORepetition {
  list  = calcArray; /* this is calculatedTable[calcItem] (the key) */
  item  = item;
  index = itemIdx;
}

DayCell: WOGenericContainer {
  elementName = "td";
  COLSPAN     = "1";
  BGCOLOR     = config.colors_halfHourCell;
  ALIGN       = "middle";
  WIDTH       = "15%";
}

DayValue: WOString { value = calcItem; }



DayValueFreeCell: WOGenericContainer {
  elementName = "td";
  COLSPAN     = "1";
  BGCOLOR     = config.colors_fullupCell;
  ALIGN       = "left";
  VALIGN      = "top";
}

DayValueUnfreeCell: WOGenericContainer {
  elementName = "TD";
  COLSPAN     = "1";
  BGCOLOR     = config.colors_appointmentCell;
  ALIGN       = "middle";
  VALIGN      = "middle";
}

DayValueStartOrEndCell: WOGenericContainer {
  elementName = "TD";
  COLSPAN     = "1";
  BGCOLOR     = config.colors_attributeCell;
  ALIGN       = "middle";
  VALIGN      = "middle";
}

IsStartTime: WOConditional {
  condition = item.status;
  value     = "startTime";
}

IsStartOrEndTime: WOConditional {
  condition = item.status;
  value     = "startOrEnd";
}

IsFreeTime: WOConditional {
  condition = item.status;
  value     = "free";
}

IsUnfreeTime: WOConditional {
  condition = item.status;
  value     = "unfree";
}

NewDateLink: WOHyperlink {
  action = takeAppointment;
}

NewImage: WOImage {
  filename = "green_corner.gif";
  ALT      = labels.newAppointmentLabel;
  border   = NO;
}

TabView: SkyTabView { selection = tabKey; }

SearchTab: SkySimpleTabItem {
  key    = "search";
  action = tabClicked;
  label  = labels.tabLabel;
}

HasSearched: WOConditional { condition = hasSearched; }

ResourcesRep: WORepetition {
  list  = resources;
  item  = resource;
  index = resourceIndex;        
}

ResourcesPopup: WOPopUpButton {
  list      = sessionResourceNames;
  item      = item;
  string    = item;
  selection = selectedResource;
  nilString = "-";
}

ParticipantsConditional: WOConditional {
  condition = hasParticipantSelection;
  negate    = NO;
}

AddParticipantsAttribute:    WOString { value = labels.addParticipants;    }
SearchParticipantsAttribute: WOString { value = labels.searchParticipants; }

TeamsPopUp: WOPopUpButton {
  list              = session.teams;
  item              = item;
  string            = item.description;
  selection         = searchTeam;
  noSelectionString = labels.teamSelect;
  onChange          = "searchFieldChanged(this.value);";
}
SearchField: WOTextField {
  name     = "search";
  value    = searchText;
  onChange = "searchFieldChanged(this.value);";
}
SearchPartSubmit: WOSubmitButton {
  action = searchParticipant;
  value  = labels.searchButtonLabel;
  class  = "button_narrow";
}
Label: WOString {
  value = labels.proposalWindowTitle;
}


ParticipantList: SkyListView {
    list          = participants;
    item          = item;
    columns       = noOfCols;
    selectInverse = YES;
    selectedItems = removedParticipants;
    attributes    = attributesList;
}

ResultList: SkyListView {
    list          = resultList;
    item          = item;
    columns       = noOfCols;
    selectedItems = addedParticipants;
    attributes    = attributesList;
}

Calendar: SkyCalendarScript {}

ExtendedCheckBox: WOCheckBox {
  checked = showExtended;
  onClick = "document.editform.submit(); return true";
}

ExtendedString: WOString {
   value = labels.ExtendedView;
}

ParticipantsSelection: SkyParticipantsSelection {
  participants         = participants;
  selectedParticipants = selectedParticipants;
  onlyAccounts         = NO;  
  headLineLabel        = "searchParticipants";
  searchLabel          = "searchParticipants";
  selectionLabel       = "addParticipants";
}

ResourceSelection: SkyResourceSelection {
  resources     = resources;
  onlyResources = NO;
}

NoDateFoundCond:     WOConditional { condition = hasNoEntries; }
NoDateFoundCondElse: WOConditional { condition = hasNoEntries; negate = YES; }

FoundNoDate: WOString { value = labels.noResult; }
