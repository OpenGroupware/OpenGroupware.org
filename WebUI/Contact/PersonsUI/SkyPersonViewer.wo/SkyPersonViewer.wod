// $Id: SkyPersonViewer.wod,v 1.7 2004/04/19 12:16:07 helge Exp $

Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title   = labels.personviewer_title;
  onClose = session.navigation.leavePage;
}

Title: LSWViewerTitle {
  title  = viewerTitle;
}

// tabs

TabBody: SkyTabView {
  selection = tabKey;
}

AttributesTab: SkyTabItem {
  key       = "attributes";
  label     = labels.personviewer_tab_person;
  icon      = "attributes";
  isScript  = YES;
}

ProjectsTab: SkyTabItem {
  key       = "projects";
  label     = labels.personviewer_tab_projects;
  icon      = "projects";
}

EnterpriseTab: SkyTabItem {
  key       = "enterprises";
  label     = labels.personviewer_tab_enterprises;
  icon      = "enterprise";
}

AddressTab: SkyTabItem {
  key       = "address";
  label     = labels.personviewer_tab_address;
  icon      = "address";
  isScript  = YES;
}

PictureTab: SkyTabItem {
  key       = "picture";
  label     = labels.personviewer_tab_picture;
  icon      = "picture";
}

AppointmentsTab: SkyTabItem {
  key       = "appointments";
  label     = labels.personviewer_tab_appointments;
  icon      = "appointments";
}

LogTab: SkyTabItem {
  key       = "log";
  label     = labels.personviewer_tab_log;
  icon      = "log";
}

LinkTab: SkyTabItem {
  key       = "links";
  label     = labels.personviewer_tab_links;
  icon      = "links";
}

IsInEnterpriseCond: WOConditional {
  condition = isInEnterprise;
}

HasImage: WOConditional {
  condition = hasImage;
}
IsPersonLoggedInAccount: WOConditional {
  condition = isPersonLoggedInAccount;
}

// personal attributes

PersonalAttributes: SkyPersonalAttributesViewer {
  object = person;
}

// projects

ProjectList: SkyPersonProjectList {
  person = person;
}

// appointments

AptToggleCell: WOGenericContainer {
  elementName = "td";
  align       = "left";
  valign      = "middle";
  bgcolor     = config.colors_mainButtonRow;
  width       = "1%";
}

ShowAptListCond: WOConditional {
  condition   = aptViewKey;
  value       = "list";
}

ShowAptViewCond: WOConditional {
  condition   = aptViewKey;
  value       = "view";
}

SwitchToView: WOHyperlink {
  action      = switchToAptView;
}

SwitchToList: WOHyperlink {
  action      = switchToAptList;
}

ViewIcon: WOImage {
  filename = "icon_apt_overview.gif";
  border   = "0";
  valign   = "top";
  alt      = labels.overview;
}

ViewIconInactive: WOImage {
  filename = "icon_apt_overview_inactive.gif";
  border   = "0";
  valign   = "top";
  alt      = labels.overview;
}

ListIcon: WOImage {
  filename = "icon_apt_list.gif";
  border   = "0";
  valign   = "top";
  alt      = labels.list;
}

ListIconInactive: WOImage {
  filename = "icon_apt_list_inactive.gif";
  border   = "0";
  valign   = "top";
  alt      = labels.list;
}

AppointmentList: SkyAppointmentList {
  dataSource = aptsOfPerson;
  person     = person;
}

AppointmentView: SkyInlineWeekOverview {
  dataSource = aptsOfPerson;
  weekStart  = weekStart.beginOfDay;
}

AddressesViewer: SkyAddressesViewer {
  company = person;
  columns = 3;
}

MailList: SkyMailList {}

LogList: SkyObjectLogList {
  object = person;
}

RelatedLinks: OGoObjectLinkList {
  object = person;
}

EnterpriseSetViewer: SkyPersonEnterpriseSetViewer {
  person = person;
}

Picture: WOImage {
  data     = imageData;
  mimeType = imageType;
}

AttributeCell: SkyAttributeCell {}
ValueCell:     SkyValueCell { alignTop = YES; }

LoginLabel: WOString { value = labels.login; }
Login:      WOString { value = person.login; }

IsAccountCond:  WOConditional { condition = person.isAccount.boolValue; }
IsRootCondElse: WOConditional { condition = isPersonNotRoot; }

Font: SkyConfigFont {}

Buttons: SkyButtonRow {
  ordering       = ( toaccount, viewaccount, newjob, clip, mail, edit );

  // default buttons
  onClip         = placeInClipboard;
  hasEdit        = isEditEnabled;
  onEdit         = edit;
  onMail         = mailObject;
  urlMail        = objectUrl;

  onNewjob       = newJob;
  hasNewjob      = hasNewJob;
  newjob         = labels.action_newjob;

  // labels
  clip           = labels.clip;
  edit           = labels.edit;
  mail           = labels.send;

  hasToaccount   = canMakeAccountFromPerson;
  hasViewaccount = canViewAccount;
  hasEditaccount = canEditAccount;
  onToaccount    = personToAccount;
  onViewaccount  = viewAccount;
  onEditaccount  = editAccount;

  toaccount      = labels.action_toAccount;
  viewaccount    = labels.action_viewAccount;
  editaccount    = labels.action_editAccount;
}

FormLetterLink: WOHyperlink {
  target = formLetterTarget;
  action = downloadFormLetter;
  style  = "text-decoration:none";
}

FormLetterName: WOString {
  value = labels.FormLetterLink;
}

DownloadLabel: WOString {
    value = labels.download;
}

VCardLink: WOHyperlink {
  target   = formLetterTarget;
  action   = downloadVCard;
  mimeType = "text/directory";
  style    = "text-decoration:none";
}

VCardName: WOString {
  value = "vcard";
}

// LDAP

ShowLDAPInfo: WOConditional {
  condition = showLDAPInfo;
}

LDAPInfoViewer: SkyPersonLDAPViewer {
  skyrixLogin = person.login;
}

LDAPTab: SkyTabItem {
  key      = "ldap";
  label    = labels.personviewer_tab_ldap;
  icon     = "ldap";
  isScript = YES;
}

AccessList: SkyAccessList {
  accessList   = accessIds;
  isInTable    = NO;
  accessChecks = accessChecks;
  labels       = labels;
  isViewerMode = YES;
}

AccessTab: SkySimpleTabItem {
  key   = "access";
  label = labels.accessTab;
}

AccessTitle: LSWViewerTitle {
  title    = labels.access;
  gentable = YES;
}

AccessButtons: SkyButtonRow {
  onEdit   = editAccess;
  ordering = ( edit );
  edit     = labels.edit;
  hasEdit  = isEditEnabled;
}

IsAccessRightEnabled: WOConditional {
  condition = isAccessRightEnabled;
}

IsProjectEnabled: WOConditional {
  condition = isProjectEnabled;
}

IsLogTabEnabled: WOConditional {
  condition = isLogTabEnabled;
}

IsLinkTabEnabled: WOConditional {
  condition = isLinkTabEnabled;
}
