{
  // TODO: a lot of DUPs between this and OGoSchedulerViews!

  scheduler_hide_new_proposal_on_rescat    = YES;
  scheduler_selectPanel_showAptTypes       = YES;
  scheduler_memberteams_only               = NO;


  scheduler_daychart_maxaptinfolength      = 14;
  scheduler_weekchart_maxaptinfolength     = 7;
  scheduler_weekchart_starthour            = 8;
  scheduler_weekchart_endhour              = 21;
  scheduler_weekchart_columnsperday        = 24;
  scheduler_daychart_columnsperday         = 60;
  scheduler_first_day_of_week              = 1; // monday
  scheduler_monthoverview_maxaptperday     = 20;
  scheduler_monthoverview_maxaptinfolength = 14;
  scheduler_dayoverview_timeinterval       = 3600; // in seconds
  scheduler_dayoverview_daystart           = 480;  // minutes after 0:00
  scheduler_dayoverview_dayend             = 1080; // minutes after 0:00
  scheduler_additional_popup_entries       = 20;
  scheduler_overview_short_info            = YES;
  scheduler_overview_with_resources        = YES;

  // holidays
  scheduler_show_holiday_shrovetide       = NO;  // Fastnacht
  scheduler_show_holiday_ascension        = YES;  // Christi Himmelfahrt
  scheduler_show_holiday_mothersDay       = NO;  // Muttertag
  scheduler_show_holiday_corpusChristi    = NO;  // Fronleichnam
  scheduler_show_holiday_summertimeChange = YES; // Sommerzeitumstellung
  scheduler_show_holiday_wintertimeChange = YES; // Winterzeitumstellung
  scheduler_show_holiday_christmasEve     = YES; // Weihnachtsabend
  scheduler_show_holiday_newYearsEve      = YES; // Silvester
  scheduler_show_holiday_deathsSunday     = NO;  // Totensonntag
  scheduler_show_holiday_newYear          = YES;
  scheduler_show_holiday_holyThreeKings   = YES;  
  scheduler_show_holiday_goodFriday       = YES;
  scheduler_show_holiday_easter           = YES;
  scheduler_show_holiday_firstMay         = YES;
  scheduler_show_holiday_whitsun          = YES;
  scheduler_show_holiday_germanUnityDay   = YES;
  scheduler_show_holiday_reformationsDay  = YES;
  scheduler_show_holiday_allSaintsDay     = YES;
  scheduler_show_holiday_christmasDay     = YES;
  scheduler_show_holiday_boxingDay        = YES;
  scheduler_show_holiday_firstAdvent      = NO;
  scheduler_show_holiday_secondAdvent     = NO;
  scheduler_show_holiday_thirdAdvent      = NO;
  scheduler_show_holiday_fourthAdvent     = NO;
  scheduler_show_holiday_dayOfPrayerAndRepetance = YES;


  scheduler_show_holiday_holidaygroup_bay    = NO;  // Bayern
  scheduler_show_holiday_holidaygroup_ber    = NO;  // Berlin
  scheduler_show_holiday_holidaygroup_bra    = NO;  // Brandenburg
  scheduler_show_holiday_holidaygroup_bre    = NO;  // Bremen
  scheduler_show_holiday_holidaygroup_bwb    = NO;  // Baden-Wuertt.
  scheduler_show_holiday_holidaygroup_hes    = NO;  // Hessen
  scheduler_show_holiday_holidaygroup_hh     = NO;  // Hamburg
  scheduler_show_holiday_holidaygroup_mvp    = NO;  // Meck.-P.
  scheduler_show_holiday_holidaygroup_nrw    = NO;  // Nordrein-W.
  scheduler_show_holiday_holidaygroup_nsa    = NO;  // Niedersachsen
  scheduler_show_holiday_holidaygroup_rpf    = NO;  // Rheinland-Pf.
  scheduler_show_holiday_holidaygroup_saa    = NO;  // Saarland
  scheduler_show_holiday_holidaygroup_sac    = NO;  // Sachsen
  scheduler_show_holiday_holidaygroup_sah    = YES; // Sachsen-Anhalt
  scheduler_show_holiday_holidaygroup_thu    = NO;  // Thueringen
  scheduler_show_holiday_holidaygroup_slh    = NO;  // Schleswig H.
  scheduler_show_holiday_holidaygroup_bylaw  = YES; // Gesetzl. Feiert.
  scheduler_show_holiday_holidaygroup_advent = NO;  // Advent

  scheduler_show_holiday_holidaygroup_custom_all = YES; // benutzerdefinierte
  scheduler_show_holiday_holidaygroup_custom_private = YES; // Ereignisse

  // holidays not bound in groups
  scheduler_available_holidays = (
    "shrovetide", "mothersDay", 
    "summertimeChange", "wintertimeChange", "christmasEve",
    "deathsSunday", "newYearsEve"
  );

  // school holidays
  scheduler_school_holidays = {
    // Bayern
    holidaygroup_bay = "";
    // Berlin
    holidaygroup_ber = "";
    // Brandenburg 
    holidaygroup_bra = "";
    // Bremen 
    holidaygroup_bre = "";
    // Baden-Wuerttemberg 
    holidaygroup_bwb = "";
    // Hessen 
    holidaygroup_hes = "";
    // Hamburg 
    holidaygroup_hh = "";
    // Meckl. V.
    holidaygroup_mvp = "";
    // Nordrein-W.
    holidaygroup_nrw = "";
    // Rheinland-Pf.
    holidaygroup_rpf = "";
    // Saarland
    holidaygroup_saa = "";
    // Sachsen
    holidaygroup_sac = "";
    // Niedersachsen
    holidaygroup_nsa = "";
    // Sachsen-Anhalt
    holidaygroup_sah = "";
    // Thueringen
    holidaygroup_thu = "";
    // Schleswig-H.
    holidaygroup_slh = "";
  }; 
 
  // grouped holidays
  scheduler_holiday_groups = {
    // Advent-Feiertage
    holidaygroup_advent = "";
    // Gesetzliche Feiertage
    holidaygroup_bylaw = "";
    // Benutzerdefinierte Feiertage
    holidaygroup_custom_all = "";
    // Privat Feiertage
    holidaygroup_custom_private = "";
  };

  schedulerpage_tab      = "weekoverview";
  schedulerpage_weekview = "overview";
  schedulerpage_dayview  = "overview";

  scheduler_show_jobs       = NO;
  scheduler_show_palm_dates = YES;
  scheduler_popup_maxlength = 25;

  schedulerselect_fetchkeys = (
    title, location, aptType, startDate, endDate, globalID, ownerId, 
    accessTeamId, permissions, resourceNames,
    "participants.companyId", "participants.globalID",
    "participants.login",     "participants.firstname",
    "participants.name",      "participants.description",
    "participants.isTeam",    "participants.isAccount"
  );
  schedulerselect_teamfetchkeys   = ( description );
  schedulerselect_personfetchkeys = ( 
    name, firstname, isAccount, login, companyId, globalID
  );
  schedulerselect_months = (
    January, February, March, April, May, June, July, August, September, 
    October, November, December
  );
  
  schedulerconflicts_fetchkeys = (
    title, location, startDate, endDate, globalID
  );
  schedulerconflicts_conflictkeys = (
    companyId, partStatus, role,
    team.isTeam, team.description,
    person.name, person.firstname
  );
  
  /*
    Those are keys fetched from the backend and are then mapped to the
    bindings dictionary available for formletters.
  */
  schedulerformletter_aptkeys = (
    startDate, endDate, resourceNames, keywords, title, cycleEndDate,
    location, type, dateId, globalID, objectVersion, aptType, busyType, fbtype,
    ownerId, comment,
    
    participants.isAccount, participants.isTeam, // those are required!
    
    participants.emailAlias, participants.office, participants.assistantName,
    participants.number, participants.sex, participants.keywords,
    participants.contactId, participants.salutation, participants.nameAffix,
    participants.firstname, participants.companyId,
    participants.anniversary, participants.priority, participants.occupation,
    participants.partnerName, participants.description,
    participants.degree, participants.middlename, participants.objectVersion,
    participants.freebusyUrl, participants.department,
    participants.birthday, participants.bossName, participants.name,
    participants.url, participants.imAddress, participants.nameTitle,
    participants.dirServer,
    participants.comment,
    participants.extendedAttributes
  );

  OGoSchedulerFormLetterDebugEnabled = NO;
  OGoSchedulerFormLetterTypes = {
    OOo = {
      filename           = "OOoFormLetter.csv";
      contenttype        = "text/plain";
      //contentdisposition = "attachment; filename=\"OOoFormLetter.csv\"";

      fieldSeparator = "\t";
      lineSeparator  = "\n";
      quoteFields    = "\"";
      doubleQuoteQuote = YES;

      /* dateformat     = "%d.%m.%Y"; */
      preamble = (
        "Title", "First Name", "Last Name", "Company Name",
        "Address Line 1", "Address Line 2",
        "City", "State", "ZIP", "Country",
        "Telephone private", "Telephone business",
        "E-mail Address", "Gender",

        "Appointment"
      );
      line = (
        "$salutation$", "$firstname$", "$name$", "",
        "$mailing_name1$", "$mailing_name2$",
        "$mailing_city$", "$mailing_state$", "$mailing_zip$",
        "$mailing_country$",
        "", "",
        "$email1$", "$sex$",
        "$title$ - $location$ ($startDate$ - $endDate$)"
      );
    };

    FrameMaker = {
      filename    = "FrameMaker_FormLetter.txt";
      contenttype = "text/plain";

      lineSeparator = "";
      line = "$mailing_name1$\n$mailing_name2$\n$mailing_name3$\n$degree$ $firstname$ $name$\n\n$mailing_street$\n$mailing_zip$ $mailing_city$\n\n\n\n\n\n$salutation$ $name$,\n\n";
    };

    WinWord = {
      filename    = "WordFormLetter.csv";
      contenttype = "text/plain";

      fieldSeparator = ";";
      lineSeparator  = "\n";
      line = (
        "$salutation$",
        "$sex$",
        "$degree$",
        "$firstname$",
        "$name$",
        "$mailing_name1$",
        "$mailing_name2$",
        "$mailing_name3$",
        "$mailing_street$",
        "$mailing_zip$",
        "$mailing_city$",
        "",
        "$email1$",

        "$title$ - $location$ ($startDate$ - $endDate$)"
      );
    };
  };
  
  scheduler_mailsubject_template = "$label_apt$: '$title$' $label_action$";
  scheduler_mail_template             = "";
  //scheduler_mail_template             = "Appointment data:\n\nTitle: $title$\nLocation: $location$\nStart: $startDate$\nEnd: $endDate$\nCreator: $creator$\nParticipants: $participants$\nResources: $resourceNames$\nComment: $comment$\n\n";
  scheduler_mail_template_date_format = "%Y-%m-%d %H:%M %Z";

  scheduler_mailsubject_template_for_type = {
    birthday = {
      English = "Happy Birthday: '$title$' $label_action$";
      German  = "Geburtstag: '$title$' $label_action$";
    };
    duedate = "!!$label_apt$: '$title$' $label_action$!!";
  };

  // also available: scheduler_mail_template_for_type
}
