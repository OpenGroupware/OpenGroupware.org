// $Id: LSWDocumentMove.wod,v 1.1.1.1 2003/07/09 22:57:44 cvs Exp $

Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title   = labels.docMoveTitle;
  onClose = session.navigation.leavePage;
}

MainButtonRow: WOGenericContainer {
  elementName = "tr";
  bgcolor     = config.colors_mainButtonRow;
};

DocumentTitle: WOString {
  value = documentTitle;        
}

// folder tree
 
IsLastNavLink: WOConditional { 
  condition = isLastNavLink; 
};

IsNotLastNavLink: WOConditional { 
  condition = isLastNavLink; 
  negate    = YES;
};

FolderCond: WOConditional { 
  condition = subFolder.isFolder.boolValue;
};

RootFolderCond: WOConditional { 
  condition = navItemIndex;
  value     = 0;
};

FolderOpenCond: WOConditional { 
  condition = isFolderOpen;
};

FolderOpenCondElse: WOConditional { 
  condition = isFolderOpen;
  negate    = YES;
};

DocFolderNavRep: WORepetition {
  list  = folderStack;
  item  = folder;
  index = navItemIndex;        
};

DocFolderNavRep2: WORepetition {
  list      = folderStack;
  item      = folder;
  index     = navItemIndex;
  separator = "/";
};

DocFolderImageLink: WOHyperlink {
  action   = navigate;
  filename = "folder_opened.gif";
  border   = "0";
  alt      = folder.title;
}

DocFolderLink: WOHyperlink {
  action    = navigate;
  string    = folder.title;
  nilString = "untitled";         
}

DocFolderTitle: WOString {
  value     = folder.title;
  nilString = "untitled";         
}

FolderLink: WOHyperlink {
  action = subFolderClicked;
  string = subFolder.title;        
}

SelectLink: WOHyperlink {
  action = move;
  string = labels.moveToFolder;        
}

SelectRootLink: WOHyperlink {
  action = moveToRootFolder;
  string = labels.moveToFolder;        
}

FolderOpenImageLink: WOHyperlink {
  action   = subFolderClicked;
  filename = "folder_opened.gif";
  border   = "0";
  alt      = subFolder.title;
}

FolderCloseImageLink: WOHyperlink {
  action   = subFolderClicked;
  filename = "folder_closed.gif";
  border   = "0";
  alt      = subFolder.title;
}

DocsRep: WORepetition {
  list = folders;
  item = subFolder;
};

NavCell: WOGenericContainer {
  elementName = "td";
  align	      = "left";
  colspan     = folderStackCount;
};

PathLabel: WOString {
  value = labels.startLabel;
}

Font: SkyConfigFont {}

// non-movable documents

BadDocumentsRep: WORepetition {
  list = badDocuments;
  item = badDoc;
}

BadDocumentTitle: WOString {
  value = badDoc.title;
}

BadDocumentType: WOString {
  value = badDoc.fileType;
}

PermissionDeniedLabel: WOString {
  value = labels.permissionDenied;
}

