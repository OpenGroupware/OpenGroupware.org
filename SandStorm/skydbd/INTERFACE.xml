<?xml version="1.0"?>
<!-- $Id: INTERFACE.xml,v 1.1.1.1 2003/07/09 22:57:27 cvs Exp $ -->

<interface name="com.skyrix.db" 
           xmlns="http://www.skyrix.com/skyrix-idl"
           xmlns:xrt="http://www.skyrix.com/od/xmlrpc-types"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <!-- evaluate methods ... -->
  <method name="evaluate">
    <signature>
      <input name="entity"  type="xsd:any" xrt:type="string"/>
      <input name="sqlexpr" type="xsd:string"/>
      <output type="xsd:array"/>
    </signature>
    <signature>
      <input name="sqlexpr" type="xsd:string"/>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.evaluate("SELECT COMPANY_ID FROM COMPANY WHERE FNAME LIKE 'TEST'")
       ]]>
      <documentation lang="en">
        Evaluates the SELECT expression.
      </documentation>
      <documentation lang="de">
        Wertet die SELECT Anweisung aus.
      </documentation>
    </example>
    <documentation lang="en">
      Evaluates the given expression, you can provide an optional entity if
      you want. An array of results is returned.
      "root".
    </documentation>
    <documentation lang="de">
      Wertet die 'ubergebene SQL-Anweisung aus, optional kann eine Entity
      angegeben werden. Es wird ein Array von Ergebnissen zur'uckgegeben.
    </documentation>
  </method>
  
  <!-- db schema reflection -->
  <method name="getTables">
    <signature>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getTables()
       ]]>
      <documentation lang="en">
        Get all table names.
      </documentation>
      <documentation lang="de">
        Gibt alle Tabellennamen zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns all table names.
    </documentation>
    <documentation lang="de">
      Gibt die Namen aller Tabellen zur'uck.
    </documentation>
  </method>
  
  <method name="getAttributesOfTable">
    <signature>
      <input name="tableName" type="xsd:string"/>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getAttributesOfTable('foo')
       ]]>
      <documentation lang="en">
        Returns the attributes of table 'foo'.
      </documentation>
      <documentation lang="de">
        Gibt die Attribute der Tabelle 'foo' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the attributes of the table with the given name.
    </documentation>
    <documentation lang="de">
      Gibt die Attribute der Tabelle mit dem 'ubergebenen Namen zur'uck.
    </documentation>
  </method>
  
  <method name="getPrimaryKeyAttributesOfTable">
    <signature>
      <input name="tableName" type="xsd:string"/>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getPrimaryKEyAttributessOfTable('foo')
       ]]>
      <documentation lang="en">
        Returns the primary key attributes of table 'foo'.
      </documentation>
      <documentation lang="de">
        Gibt die Primary-Key-Attribute der Tabelle 'foo' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the primary key attributes of the table with the given name.
    </documentation>
    <documentation lang="de">
      Gibt die Primary-Key-Attribute der Tabelle mit dem 'ubergebenen 
      Namen zur'uck.
    </documentation>
  </method>
  
  <!-- datasource methods -->
  <method name="fetch">
    <signature>
      <input name="entity"             type="xsd:any" xrt:type="string"/>
      <input name="fetchSpecification" type="xsd:any" xrt:type="string"/>
      <output type="xsd:array"/>
    </signature>
    <signature>
      <input name="entity"             type="xsd:any" xrt:type="string"/>
      <input name="fetchSpecification" type="xsd:any" xrt:type="struct"/>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.fetch("person","name like '*meier*'")
       ]]>
      <documentation lang="en">
        Fetches all entries in the entity 'person' with the attribute 'name'
        like 'meier'.
      </documentation>
      <documentation lang="de">
        Fetcht alle Eintr'age des Entities 'person', bei denen das Attribut
        'name' dem String '*meier*' matcht.
      </documentation>
    </example>
    <documentation lang="en">
      Perform a fetch on the given entity with the given fetch specification,
      return an array of results. The fetch specification can be either a
      string (as shown in the example) or a dictionary.      
    </documentation>
    <documentation lang="de">
      F'uhrt einen Fetch in der 'ubergebenen Entity mit der 'ubergebenen
      Fetch Spezifikation aus, gibt ein Array von Ergebnissen zur'uck. Die
      Fetch Spezifikation kann entweder ein String sein (wie im Beispiel
      gezeigt) oder ein Dictionary.
    </documentation>
  </method>
  
  <method name="insert">
    <signature>
      <input name="entity" type="xsd:any" xrt:type="string"/>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:struct"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.insert("person",{'name' : 'Mueller'})
       ]]>
      <documentation lang="en">
        Inserts the record with the name 'Mueller' in the entity 'person'.
      </documentation>
      <documentation lang="de">
        F'ugt den Datensatz mit dem Namen 'Mueller' in die Entity 'person' ein.
      </documentation>
    </example>
    <documentation lang="en">
      Inserts the given record in the entity with the given name.
    </documentation>
    <documentation lang="de">
      F'ugt den 'ubergebenen Datensatz in die Entity mit dem 'ubergebenen
      Namen ein.
    </documentation>
  </method>
  
  <method name="update">
    <signature>
      <input name="entity" type="xsd:any" xrt:type="string"/>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:struct"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.update("person",{'name' : 'Mueller', 
                                         'firstname' : 'Max',
                                         'companyId' : '12345'})
       ]]>
      <documentation lang="en">
        Updates the record for Max Mueller in the entity 'person'.
      </documentation>
      <documentation lang="de">
        Updated den Eintrag f'ur Max Mueller in der Entity 'person'.    
      </documentation>
    </example>
    <documentation lang="en">
      Updates the given record in the given entity. The record has to contain
      the primary key for this to work.
    </documentation>
    <documentation lang="de">
      Updated den 'ubergebenen Datensatz in der 'ubergebenen Entity. Der
      Datensatz muss das Primary-Key-Attribut enthalten, damit diese Operation
      erfolgreich ist.
    </documentation>
  </method>
  
  <method name="delete">
    <signature>
      <input name="entity" type="xsd:any" xrt:type="string"/>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:struct"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.delete("person",{'name' : 'Mueller', 
                                         'firstname' : 'Max',
                                         'companyId' : '12345'})
       ]]>
      <documentation lang="en">
        Deletes the record for Max Mueller from the entity 'person'.
      </documentation>
      <documentation lang="de">
        L'oscht den Eintrag f'ur Max Mueller in der Entity 'person'.    
      </documentation>
    </example>
    <documentation lang="en">
      Deletes the given record from the given entity. The record has to contain
      the primary key for this to work.
    </documentation>
    <documentation lang="de">
      L'oscht den 'ubergebenen Datensatz in der 'ubergebenen Entity. Der
      Datensatz muss das Primary-Key-Attribut enthalten, damit diese Operation
      erfolgreich ist.
    </documentation>
  </method>
</interface>
