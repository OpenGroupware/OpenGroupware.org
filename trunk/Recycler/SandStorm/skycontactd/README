# $Id$

XML-RPC Daemon which provides Contact Data (Enterprise/Person Info) ...

Namespace:
  
  com.skyrix.contacts [stripped]
  com.skyrix.contacts.person
  com.skyrix.contacts.enterprise
  
XML-RPC API:

======================================================================

Package person

  Method person.getByNumber(arg1)
    Parameters: arg1: unique number of a person (String or Number)
        Result: PersonDocument
      Examples: person.getByNumber(12345)

  Method person.deleteByNumber(arg1)
    Parameters: arg1: unique number of a person (String or Number)
        Result: /
      Examples: person.deleteByNumber(12345)

  Method person.fetchIds(arg1)
    Parameters: arg1: FetchSpecification
        Result: Array of IDs
      Examples: person.fetchIds(
                              { 
                                qualifier    = "name like '*Duck*'";
                              }
                            )

  Method person.fetch(arg1)
    Parameters: arg1: FetchSpecification
        Result: Array of PersonDocuments
      Examples: person.fetch(
                              { 
                                qualifier    = "name like '*Duck*'";
                                sortOrderings = ( "name" );
                              }
                            )

  Method person.insert(arg1)
    Parameters: arg1: Dictionary
        Result: PersonDocument
      Examples: person.insert(
                               {    
                                 firstname  = "Donald";
                                 middlename = "Die Ente";
                                      name  = "Duck";
                               }
                             )
  Method person.update(arg1)
    Parameters: arg1: PersonDocument
        Result: PersonDocument
      Examples: person.update(
                               {    
                                         id = "___ person id ___";
                                 firstname  = "Donaldo";
                                 middlename = "The Scar";
                                      name  = "Duckfonzo";
                               }
                             )

  Method person.delete(arg1)
    Parameters: arg1: PersonDocument
        Result: /
      Examples: person.delete(
                               {    
                                    id = "___ person id ___";
                                    ... some more attributes ...
                               }
                             )

  Method person.getEnterprises(arg1)
    Parameters: arg1: PersonDocument
        Result: array of EnterpriseDocuments
      Examples: person.getEnterprises(
                               {    
                                    id = "___ person id ___";
                                    ... some more attributes ...
                               }
                             )

  Method person.fetchEnterprises(arg1, arg2)
    Parameters: arg1: PersonDocument
                arg2: FetchSpecification
        Result: array of EnterpriseDocuments
      Examples:  
                person.fetchEnterprises(
                                 {
                                   id = "___ person id ___";
                                   ... some more attributes ...
                                 },
                                 {
                                   hints = {
                                             attributes = ["name", "nickname"];
                                           };
                                 }
                )
                
  Method person.getProjects
    Parameters: PersonDocument (*MUST* contain the person number)
        Result: array of ProjectDocuments
      Examples: person.getProjects(12345)

                person.getProjects(
                               {    
                                    number = "12345"; // absolute necessary!!!
                                    ... some more attributes ...
                               }
                             )

  Method person.insertEnterprise(arg1, arg2)
    Parameters: arg1: PersonDocument
                arg2: EntepriseDocument
        Result: /
      Examples: person.insertEnterprise(
                                        { 
                                          id = "___ person id ___";
                                        },
                                        { 
                                          id = "___ enterprise id ___";
                                        }
                                       );

  Method person.deleteEnterprise(arg1, arg2)
    Parameters: arg1: PersonDocument
                arg2: EntepriseDocument
        Result: /
      Examples: person.deleteEnterprise(
                                        { 
                                          id = "___ person id ___";
                                        },
                                        { 
                                          id = "___ enterprise id ___";
                                        }
                                       );



  Method person.get(arg1)
    Parameters: unique number of a person (String or Number) OR
                Dictionary (containing the query attributes)
        Result: Array OR
                PersonDocument
      Examples: person.get(12345);

                person.get(
                             {    
                                    name = "Duck";
                               firstname = "Donald";
                                nickname = "ente"
                             }
                           ) // creates an AND qualifier

Package enterprise

  Method getByNumber
    Parameters: unique number of a enterprise (String or Number)
        Result: EnterpriseDocument
      Examples: enterprise.getByNumber(12345)

  Method deleteByNumber
    Parameters: unique number of a enterprise (String or Number)
        Result: ???
      Examples: enterprise.deleteByNumber(12345)

  Method enterprise.fetchIds(arg1)
    Parameters: arg1: FetchSpecification
        Result: Array of IDs
      Examples: enterprise.fetchIds(
                              { 
                                qualifier    = "name like '*Duck*'";
                              }
                            )

  Method fetch
    Parameters: FetchSpecification
        Result: Array of EnterpriseDocuments
      Examples: enterprise.fetch(
                              { 
                                qualifier    = "name = 'Skyrix'";
                                sortOrdeings = ( "name" );
                              }
                            )

  Method insert
    Parameters: Dictionary
        Result: the new EnterpriseDocument (including the enterprise number)
      Examples: enterprise.insert(
                               {    
                                 firstname  = "Donald"; // ???
                                 middlename = "Die Ente";
                                      name  = "Duck";
                               }
                             )
  Method update
    Parameters: EnterpriseDocument (*MUST* contain the enterprise number!!!)
        Result: the updated EnterpriseDocument
      Examples: enterprise.update(
                               {    
                                    number  = "12345"; // absolute necessary!!!
                                 firstname  = "Donaldo";
                                 middlename = "The Scar";
                                      name  = "Duckfonzo";
                               }
                             )

  Method delete
    Parameters: unique number of an enterprise (String or Number) OR
                EnterpriseDocument (*MUST* contain the enterprise number)
        Result: ???
      Examples: enterprise.delete(12345)
                enterprise.delete(
                               {    
                                    number = "12345"; // absolute necessary!!!
                                      name = "Duck";
                                 firstname = "Donald";
                               }
                             )
  Method get
    Parameters: unique number of an enterprise (String or Number) OR
                EnterpriseDocument (*MUST* contain the enterprise number)
        Result: ???
      Examples: enterprise.get(12345)

                enterprise.get(
                               {    
                                    number = "12345"; // absolute necessary!!!
                                    ... some more attributes ...        
                               }
                             )


  Method getPersons
    Parameters: unique number of an enterprise (String or Number) OR
                EnterpriseDocument (*MUST* contain the enterprise number)
        Result: array of PersonDocuments
      Examples: enterprise.getPersons(12345)

                enterprise.getPersons(
                               {    
                                    number = "12345"; // absolute necessary!!!
                                    ... some more attributes ...
                               }
                             )

  Method fetchPersons
    Parameters: 1. unique number of an enterprise (String or Number) OR
                   EnterpriseDocument (*MUST* contain the enterprise number)
                2. FetchSpecification
        Result: array of PersonDocuments
      Examples:  
                fSpec = {}
                fSpec['attributes'] = ["name", "nickname"]

                enterprise.fetchPersons(12345, fSpec)

  Method getProjects
    Parameters: unique number of an enterprise (String or Number) OR
                EnterpriseDocument (*MUST* contain the enterprise number)
        Result: array of ProjectDocuments
      Examples: enterprise.getProjects(12345)

                enterprise.getProjects(
                               {    
                                    number = "12345"; // absolute necessary!!!
                                    ... some more attributes ...
                               }
                             )

======================================================================