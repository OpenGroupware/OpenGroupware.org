<?xml version="1.0"?>
<!-- $Id$ -->

<interface name="com.skyrix.accounts" 
           xmlns="http://www.skyrix.com/skyrix-idl"
           xmlns:xrt="http://www.skyrix.com/od/xmlrpc-types"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <!-- fault name="Authentication Failed" code="1" /-->
  <!-- fault name="Account::set failed"   code="2" /-->

  <method name="authenticate">
    <signature>
      <input name="login" type="xsd:string"/>
      <input name="pwd"   type="xsd:string"> 
        <documentation> 
          Base64 encoded
        </documentation>
      </input>
      <output type="xsd:int">
        <documentation> 
          0 success, valid credentials
          1 credentials insufficient
          2 authinfo unavailable
          3 user unknown
          4 maxtries
          (see PAM)
        </documentation>
      </output>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.authenticate("foo","X2DF4F")
       ]]>
      <documentation lang="en">
        Tries to authenticate the user "foo" with the encoded encoded password.
      </documentation>
      <documentation lang="de">
        Versucht, den User "foo" mit dem codierten Passwort zu authorisieren.
      </documentation>
    </example>
    <documentation lang="en">
      Tries to authenticate the user with the given login and the given
      password. The password is base64 encoded.
      The server returns 0 on successful authentication, 1 on insufficient
      credentials, 2 when the authinfo is unavailable, 3 when the user
      is unknown and 4 when the maxcount of retries is reached. This is
      modelled PAM-alike.
    </documentation>
    <documentation lang="de">
      Versucht, den 'ubergebenen Nutzer mit dem 'ubergebenen Passwort
      zu authentifizieren. Das Passwort ist dabei base64-encoded.
      Bei erfolgreicher Authentifizierung gibt der Server 0 zur'uck, bei
      nicht ausreichenden Credentials 1. Wenn die Informationen zur
      Authentifizierung nicht verf'ugbar sind, wird 3 zur'uckgegeben und
      wenn die maximale Anzahl von Versuchen erreicht ist 4. Dies ist analog
      den Returncodes bei PAM modelliert.
    </documentation>
  </method>

  <method name="getAccount">
    <signature>
      <input name="uid" type="xsd:string">
        <documentation> 
          uid des accounts
        </documentation>
      </input>
      <output type="xsd:struct">
        <documentation> 
          uid, login, name, firstname
        </documentation>
      </output>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getAccount("12345")
       ]]>
      <documentation lang="en">
        Gets the account for the user with the UID '12345'.
      </documentation>
      <documentation lang="de">
        Gibt den Account f'ur den User mit der UID '12345' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Gets the account for the user with the given UID. The returned dictionary
      contains apart from the UID (uid) the login name (login), the name
      and the first name (name, firstname) of the user.
    </documentation>
    <documentation lang="de">
      Fordert den Account f'ur den Nutzer mit der 'ubergebenen UID an.
      Das zur'uckgegebene Dictionary beinhaltet ausser der UID (uid) noch
      den Login (login) sowie den Vor- und Nachnamen (firstname, name) des
      Nutzers.
    </documentation>
  </method>

  <method name="getAccountByLogin">
    <signature>
      <input name="login" type="xsd:string"/>
      <output type="xsd:struct">
        <documentation> 
          uid, login, name, firstname
        </documentation>
      </output>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getAccountByLogin("meier")
       ]]>
      <documentation lang="en">
        Gets the account for the user with the login 'meier'.
      </documentation>
      <documentation lang="de">
        Gibt den Account f'ur den User mit dem Login 'meier' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Gets the account for the user with the given login. 
      The returned dictionary
      contains apart from the login (login) the UID (uid), the name
      and the first name (name, firstname) of the user.
    </documentation>
    <documentation lang="de">
      Fordert den Account f'ur den Nutzer mit dem 'ubergebenen Login an.
      Das zur'uckgegebene Dictionary beinhaltet ausser dem Login (login) noch
      die UID (uid) sowie den Vor- und Nachnamen (firstname, name) des
      Nutzers.
    </documentation>
  </method>

  <method name="changePassword">
    <signature>
      <input name="uid"         type="xsd:string"/>
      <input name="newPassword" type="xsd:string"/>
      <input name="oldPassword" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <signature>
      <input name="newPassword" type="xsd:string"/>
      <input name="oldPassword" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.changePassword("X534Ee","er4rt4ty")
       ]]>
      <documentation lang="en">
        Changes the password for the current user.
      </documentation>
      <documentation lang="de">
        'Andert das Passwort f'ur den momentanen Nutzer.
      </documentation>
    </example>
    <documentation lang="en">
      Changes the password for the user with the given uid from oldPassword
      to newPassword. Both passwords are base64 encoded. If no UID is provided,
      the password of the current user is changed.
    </documentation>
    <documentation lang="de">
      'Andert das Passwort des Nutzers mit der 'ubergebenen UID von
      oldPassword in newPassword. Beide Passw'orter sind base64 encoded.
      Wenn keine UID 'ubergeben wird, wird das Passwort des momentanen
      Nutzers ge'andert.
    </documentation>
    <!-- throw name="AuthenticationFailed" / -->
  </method>
 
  <method name="updateAccount">
    <signature>
      <input name="uid" type="xsd:string"/>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:boolean"/>
    </signature>
    <signature>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.updateAccount({'name' : 'Mueller'})
       ]]>
      <documentation lang="en">
        Changes the name attribute of the current user to 'Mueller'.
      </documentation>
      <documentation lang="de">
        'Andert das name Attribut des aktuellen Nutzers auf 'mueller'.
      </documentation>
    </example>
    <documentation lang="en">
      Changes the information in the given record for the user with the
      given UID (only root can do that). If no UID is provided,
      the attributes of the current user are changed.
    </documentation>
    <documentation lang="de">
      'Andert die Informationen im 'ubergebenen Record f'ur den Nutzer mit
      der 'ubergebenen UID (nur Root darf diesen Befehl ausf'uhren). Wenn
      keine UID 'ubergeben wird, werden die Informationen des aktuellen
      Nutzers ge'andert.
    </documentation>
  </method>

  <method name="createAccount">
    <signature>
      <input name="record" type="xsd:struct"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.createAccount({'name' : 'Mueller',login : 'mm',
                                       'firstname' : 'Max'})
       ]]>
      <documentation lang="en">
        Creates an account 'mm' for Max Mueller.
      </documentation>
      <documentation lang="de">
        Erstellt einen Account 'mm' f'ur Max Mueller.
      </documentation>
    </example>
    <documentation lang="en">
      Creates an account for the person with the given attributes. The record
      has to contain a login. Only root can use this command
    </documentation>
    <documentation lang="de">
      Erstellt einen Account f'ur den Nutzer mit den 'ubergebenen
      Informationen. Es muss dabei das login Attribut gesetzt sein. Dieser
      Befehl kann nur vom Root-User ausgef'uhrt werden.
    </documentation>
  </method>

  <method name="deleteAccount">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.deleteAccount('12345')
       ]]>
      <documentation lang="en">
        Deletes the account with the UID '12345'.
      </documentation>
      <documentation lang="de">
        L'oscht den Account mit der UID '12345'.
      </documentation>
    </example>
    <documentation lang="en">
      Deletes the account with the given UID. Only root is able to run this
      command.
    </documentation>
    <documentation lang="de">
      L'oscht den Account mit der 'ubergebenen UID. Nur der Root-Nutzer kann
      dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="isAccountLocked">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.isAccountLocked('12345')
       ]]>
      <documentation lang="en">
        Checks if the account with the UID '12345' is locked.
      </documentation>
      <documentation lang="de">
        Prueft, ob der Account mit der UID '12345' gesperrt ist.
      </documentation>
    </example>
    <documentation lang="en">
      Checks if the account with the given UID is locked. 
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      Pr'uft, ob der Account mit der 'ubergebenen UID gesperrt ist. 
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="lockAccount">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.lockAccount('12345')
       ]]>
      <documentation lang="en">
        Locks the account with the UID '12345'.
      </documentation>
      <documentation lang="de">
        Sperrt den Account mit der UID '12345'.
      </documentation>
    </example>
    <documentation lang="en">
      Locks the account with the given UID.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      Sperrt den Account mit der 'ubergebenen UID.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="unlockAccount">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.unlockAccount('12345')
       ]]>
      <documentation lang="en">
        Unlocks the account with the UID '12345'.
      </documentation>
      <documentation lang="de">
        Entsperrt den Account mit der UID '12345'.
      </documentation>
    </example>
    <documentation lang="en">
      Unlocks the account with the given UID.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      Entsperrt den Account mit der 'ubergebenen UID.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <!-- group handling -->

  <method name="groupsForAccount">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.groupsForAccount('12345')
       ]]>
      <documentation lang="en">
        Returns the groups for the account with the UID '12345'.
      </documentation>
      <documentation lang="de">
        Gibt die Gruppen zur'uck, in denen der Account mit der UID '12345'
        Mitglied ist.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the groups for the account with the given UID.
    </documentation>
    <documentation lang="de">
      Gibt die Gruppen f'ur den Account mit der 'ubergebenen UID zur'uck.
    </documentation>
  </method>

  <method name="getGroup">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:dict"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getGroup('23456')
       ]]>
      <documentation lang="en">
        Returns the groups with the GID '23456'.
      </documentation>
      <documentation lang="de">
        Gibt die Gruppe mit der GID '23456' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the group with the given group ID.
    </documentation>
    <documentation lang="de">
      Gibt die Gruppe f'ur die 'ubergebene Gruppen-ID zur'uck.
    </documentation>
  </method>

  <method name="getGroupByName">
    <signature>
      <input name="uid" type="xsd:string"/>
      <output type="xsd:dict"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getGroupByName('WFsales')
       ]]>
      <documentation lang="en">
        Returns the group for the group name 'WFsales'.
      </documentation>
      <documentation lang="de">
        Gibt die Gruppe mit dem Gruppennamen 'WFsales' zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the group for the given group name.
    </documentation>
    <documentation lang="de">
      Gibt die Gruppe f'ur den 'ubergebenen Gruppennamen zur'uck.
    </documentation>
  </method>

  <method name="getAllGroups">
    <signature>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getAllGroups()
       ]]>
      <documentation lang="en">
        Returns all available groups.
      </documentation>
      <documentation lang="de">
        Gibt alle verf'ugbaren Gruppen zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns all available groups.
    </documentation>
    <documentation lang="de">
      Gibt alle verf'ugbaren Gruppen zur'uck.
    </documentation>
  </method>

  <method name="getAllGroupNames">
    <signature>
      <output type="xsd:array"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.getAllGroupNames()
       ]]>
      <documentation lang="en">
        Returns the names of all available groups.
      </documentation>
      <documentation lang="de">
        Gibt die Namen aller verf'ugbaren Gruppen zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns the names of all available groups.
    </documentation>
    <documentation lang="de">
      Gibt die Namen aller verf'ugbaren Gruppen zur'uck.
    </documentation>
  </method>

  <method name="updateGroup">
    <signature>
      <input type="xsd:string"/>
      <input type="xsd:dict"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        dict = {}
        dict['description'] = 'WFsales'
        result = server.updateGroup('106674',dict)
       ]]>
      <documentation lang="en">
        Updates the group with the GID "106674", sets the group description to
        "WFsales".
      </documentation>
      <documentation lang="de">
        Updated die Gruppe mit der GID "106674", setzt dabei die
        Gruppenbeschreibung auf "WFsales".
      </documentation>
    </example>
    <documentation lang="en">
      Updates the group with the given GID, sets the attributes from the
      given dictionary.
    </documentation>
    <documentation lang="de">
      Updatet die Gruppe mit der 'ubergebenen GID, setzt die Attribute aus
      dem 'ubergebenen Dictionary.
    </documentation>
  </method>

  <method name="createGroup">
    <signature>
      <input type="xsd:dict"/>
      <output type="xsd:dict"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        dict = {}
        dict['description'] = 'Foo'
        result = server.createGroup('Foo')
       ]]>
      <documentation lang="en">
        Creates a group named 'Foo'.
      </documentation>
      <documentation lang="de">
        Erstellt eine Gruppen namens 'Foo'.
      </documentation>
    </example>
    <documentation lang="en">
      Creates a group with the given attributes.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      Erstellt eine Gruppe mit den 'ubergebenen Attributen.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="deleteGroup">
    <signature>
      <input type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        dict = {}
        dict['description'] = 'Foo'
        group = server.createGroup('Foo')
        result = server.deleteGroup(group['gid'])
       ]]>
      <documentation lang="en">
        Creates a group named 'Foo' and deletes it afterwards.
      </documentation>
      <documentation lang="de">
        Erstellt eine Gruppen namens 'Foo' und l'oscht diese danach wieder.
      </documentation>
    </example>
    <documentation lang="en">
      Deletes the group with the given GID.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      L'oscht die Gruppe mit der 'ubergebenen GID.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="members">
    <signature>
      <input type="xsd:string"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.members('106674')
       ]]>
      <documentation lang="en">
        Gets all members for the group with the GID "106674".
      </documentation>
      <documentation lang="de">
        Gibt alle Mitglieder der Gruppe mit der GID "106674" zur'uck.
      </documentation>
    </example>
    <documentation lang="en">
      Returns all members for the group with the given GID.
    </documentation>
    <documentation lang="de">
      Gibt alle Mitglieder der Gruppe mit der 'ubergebenen GID zur'uck.
    </documentation>
  </method>

  <method name="addAccounts">
    <signature>
      <input type="xsd:string"/>
      <input type="xsd:array"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.addAccounts('106674',['122282'])
       ]]>
      <documentation lang="en">
        Adds the account with the UID "122282" to the group with the GID
        "106674".
      </documentation>
      <documentation lang="de">
        F'ugt den Account mit der UID "122282" der Gruppe mit der GID
        "106674" hinzu.
      </documentation>
    </example>
    <documentation lang="en">
      Adds the accounts with the given GIDs to the group with the given UID.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      F'ugt die Accounts mit den 'ubergebenen GIDs zur Gruppe mit den
      'ubergebenen UIDs hinzu.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>

  <method name="removeAccounts">
    <signature>
      <input type="xsd:string"/>
      <input type="xsd:array"/>
      <output type="xsd:boolean"/>
    </signature>
    <example language="python" prefix="pyImportServer.header">
      <![CDATA[
        result = server.removeAccounts('106674',['122282'])
       ]]>
      <documentation lang="en">
        Removes the account with the UID "122282" from the group with the GID
        "106674".
      </documentation>
      <documentation lang="de">
        L'oscht den Account mit der UID "122282" aus Gruppe mit der GID
        "106674".
      </documentation>
    </example>
    <documentation lang="en">
      Removes the accounts with the given GIDs from the group with the given 
      UID.
      Only root is able to run this command.
    </documentation>
    <documentation lang="de">
      L'oscht die Accounts mit den 'ubergebenen GIDs aus der Gruppe mit den
      'ubergebenen UIDs.
      Nur der Root-Nutzer kann dieses Kommando ausf'uhren. 
    </documentation>
  </method>
</interface>
