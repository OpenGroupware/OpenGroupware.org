// $Id: SkyImapMailListHeader.wod 2 2004-08-20 11:37:44Z znek $

TableHeaderRow: WOGenericContainer {
  elementName = "tr";
  bgcolor     = config.colors_tableHeaderRow;
}

Font: SkyConfigFont {}

DoShowTree: WOHyperlink {
  action   = doShowTree;
  filename = "tree_show.gif";
  BORDER   = 0;
  ALIGN    = "bottom";
  ALT      = labels.showFolderTree;
  title    = labels.showFolderTree;
}

DoHideTree: WOHyperlink {
  action   = doHideTree;
  filename = "tree_hide.gif";
  BORDER   = 0;
  ALIGN    = "bottom";
  ALT      = labels.hideFolderTree;
  title    = labels.hideFolderTree;
}

ShowTreeCond: WOConditional { condition = showTree; }
HideTreeCond: WOConditional { condition = showTree; negate = YES;}

CurrentFolderPath: WOString {
  value = selectedFolder.absoluteName;
}

HasNewFolder:    WOConditional { condition = canNewFolder;    }
HasEditFolder:   WOConditional { condition = canEditFolder;   }
HasMoveFolder:   WOConditional { condition = canMoveFolder;   }
HasDeleteFolder: WOConditional { condition = canDeleteFolder; }
HasNewFilter:    WOConditional { condition = allowNewFilter;  }
FilterCond:      WOConditional { condition = serverHasFilter; }

// --- buttons ---

NewFolder: WOHyperlink {
  filename = "icon_new_folder.gif";
  action   = newFolder;
  ALT      = labels.newFolder;
  title    = labels.newFolder;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

EditFolder: WOHyperlink {
  filename = "icon_edit_folder.gif";
  action   = editFolder;
  ALT      = labels.editFolder;
  title    = labels.editFolder;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

MoveFolder: WOHyperlink {
  filename = "icon_move_folder.gif";
  action   = moveFolder;
  ALT      = labels.moveFolder;
  title    = labels.moveFolder;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

DeleteFolder: WOHyperlink {
  filename = "icon_delete_folder.gif";
  action   = deleteFolder;
  ALT      = labels.deleteFolder;
  title    = labels.deleteFolder;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

NewFilter:  WOHyperlink {
  filename = "icon_new_filter.gif";
  action   = newFilterForFolder;
  ALT      = labels.newFilter;
  title    = labels.newFilter;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

EmptyTrash: WOHyperlink {
  filename         = "icon_full_trash.gif";
  disabledFilename = "icon_empty_trash.gif";
  action           = emptyTrash;
  ALT              = labels.emptyTrash;
  title            = labels.emptyTrash;
  ALIGN            = "CENTER";
  VALIGN           = "MIDDLE";
  BORDER           = 0;
  disabled         = isTrashEmpty;
}

NewMail: WOHyperlink {
  filename = "icon_new_mail.gif";
  action   = newMail;
  ALT      = labels.new;
  title    = labels.new;
  ALIGN    = "CENTER";
  VALIGN   = "MIDDLE";
  BORDER   = 0;
}

FolderRep: WORepetition {
  list = folders;
  item = folder;
}

SubFolderRep: WORepetition {
  list = selectedFolder.subFolders;
  item = folder;
}

FolderAction: WOHyperlink {
  string = folder.name;
  action = folderClicked;
}

QuotaUseString: WOString {
  value = quotaUseString;
}

ShowQuotaQuotaInformation: WOConditional {
  condition = showQuotaInformantion;
}
ShowQuotaQuotaInformationElse: WOConditional {
  condition = showQuotaInformantion;
  negate    = YES;
}

IsOverQuota: WOConditional {
  condition = folder.isOverQuota;
}
IsOverQuotaElse: WOConditional {
  condition = folder.isOverQuota;
  negate    = YES;
}

RedFont: WOGenericContainer {
  elementName = "font";
  COLOR       = "red";
  SIZE        = config.font_size;
  FACE        = config.font_face;
}
