Frame: LSWSkyrixFrame {}

Window: LSWWindowFrame {
  title = labels.windowTitleDelegList;
  onClose = cancel;
}

DelegForm : WOForm 
{
  name="delegform";
}

DelegateCondition : WOConditional
{
  delegation = isDelegate;
}

TitleSource: WOGenericContainer
{
   elementName = "TR";	  
}

TitleListSource : WOString
{
  value 	= labels.TitleListSource;
}
TitleDestination : WOGenericContainer
{
   elementName = "TR";	  
}

TitleListDestination : WOString 
{
   value 	= labels.TitleListDestination;
}

ParticipantsList: SkyAptParticipantsList {
  appointment = appointment;
}

DelegTitle : WOString {
  value 	= labels.delegateWindow;
}

DelegListSource : WOBrowser
{
 list       = loadListSource;
 item	    = delegListSourceItem;
 selections = selectedSource;
 multiple   = YES;
 name	    = "deleglistsource";
 size	    = "4";
 class	    = "delegate_GLC"; 
}

DelegListDestination : WOBrowser
{
  list       = loadListDestination;
  item	     = delegListDestinationItem;
  selections = selectedDestination;
  multiple   = YES;
  name 	     = "deleglistdestination";
  size	     = "4"; 
  class	    = "delegate_GLC"; 
}

AddPerson : WOSubmitButton 
{
  action = addPersonToDestination;
  value  = labels.addPerson;
  class  = "button_auto";
}

DelPerson :WOSubmitButton 
{
 action   = delPersonFromDestination;
 value    = labels.delPerson;
 class  = "button_auto";
}

OK : WOSubmitButton 
{
  action = saveList;
  value  = labels.saveButtonLabel;
  class  = "button_auto";  
}

//liste des participants

DelegIsPrintModeCondElse: WOConditional {
  condition = printMode;
  negate    = YES;
}

DelegMainButtonRow: WOGenericContainer {
  elementName = "TR";
  BGCOLOR     = config.colors_tableViewHeaderCell;
}

DelegMainTitle: WOString {
  value = appointment.title;
}

DelegButtons: SkyButtonRow {
  ordering = (
    enabledetails, disabledetails,
    showmembers, hidemembers,
    accept, decline, tentative
  );

  hasEnabledetails  = hideDetails;
  onEnabledetails   = enableDetails;
  enabledetails     = labels.showDetails;

  hasDisabledetails = showDetails;
  onDisabledetails  = disableDetails;
  disabledetails    = labels.hideDetails;

  hasShowmembers = dontExpandTeams;
  onShowmembers  = showMembers;
  showmembers    = labels.action_showMembers;

  hasHidemembers = expandTeams;
  onHidemembers  = hideMembers;
  hidemembers    = labels.action_hideMembers;

  hasAccept    = showAcceptButton;
  onAccept     = acceptAppointment;
  accept       = labels.action_acceptAppointment;
  hasDecline   = showDeclineButton;
  onDecline    = declineAppointment;
  decline      = labels.action_declineAppointment;
  hasTentative = showTentativeButton;
  onTentative  = appointmentTentative;
  tentative    = labels.action_appointmentTentative;
}

DelegShowParticipantStateCond: WOConditional {
  condition = showParticipantRoles;
}
 DelegShowDetailsCond: WOConditional {
  condition = showDetails;
}
 DelegExpandTeamsCond: WOConditional {
  condition = expandTeams;
}
 DelegExpandTeamsCondElse: WOConditional {
  condition = expandTeams;
  negate    = YES;
}
 DelegFullTableData: WOGenericContainer {
  elementName = "td";
  colspan     = tableColumns;
}

 DelegHideMembersAction: WOHyperlink {
  filename = "expanded.gif";
  action   = hideMembers;
  title    = labels.action_hideMembers;
  alt      = labels.action_hideMembers;
  border   = 0;
}
 DelegShowMembersAction: WOHyperlink {
  filename = "collapsed.gif";
  action   = showMembers;
  title    = labels.action_showMembers;
  alt      = labels.action_showMembers;
  border   = 0;
}

 DelegParticipantRepetition: WORepetition {
  list    = participants;
  item    = item;
}

 DelegParticipantLink: WOHyperlink {
  directActionName = "activate";
  ?oid    = item.companyId;
  string  = participantLabel;
}

 DelegIsTeamParticipant: WOConditional {
  condition = isParticipantTeam;
}

 Font: SkyConfigFont {}


 DelegArchivedObjectFont: WOGenericContainer {
  elementName = "FONT";
  SIZE        = config.font_size;
  FACE        = config.font_face;
  COLOR       = config.colors_deleted_object;
}
 
 DelegTableHeaderRow: WOGenericContainer {
  elementName = "TR";
  BGCOLOR     = config.colors_tableViewAttributeCell;
}
  
// labels
 
 DelegNameLabel : WOString {
  value   = labels.nameLabel;
}
 DelegFNameLabel : WOString {
  value   = labels.fNameLabel;
}
 DelegFunctionLabel : WOString {
  value   = labels.functionLabel;
}
 DelegDegreeLabel : WOString {
  value   = labels.degreeLabel;
}
 DelegPartRoleLabel: WOString {
  value   = labels.participantRole;
}
 DelegPartStatusLabel: WOString {
  value   = labels.participantStatus;
}
 DelegEmailLabel : WOString {
  value   = labels.emailLabel;
}
 DelegTelLabel : WOString {
  value   = labels.telLabel;
}
 DelegEpLabel : WOString {
  value   = labels.epLabel;
}

 DelegTeamLabel : WOString {
  value   = labels.teamLabel;
}
 DelegPrivateLabel : WOString {
  value   = labels.accessTeam;
}

 DelegIsPersonAvailable: WOConditional {
  condition = isPersonAvailable;
}
 DelegIsPersonNotAvailable: WOConditional {
  condition = isPersonAvailable;
  negate    = YES;
}
 DelegIsEnterpriseAvailable: WOConditional {
  condition = isEnterpriseAvailable;
}
 DelegIsEnterpriseNotAvailable: WOConditional {
  condition = isEnterpriseAvailable;
  negate    = YES;
}
 DelegIsInternalMailer: WOConditional {
  condition = isInternalMailEditor;
}
 DelegIsNotInternalMailer: WOConditional {
  condition = isInternalMailEditor;
  negate    = YES;
}


 DelegIsArchivedCondElse : WOConditional {
  negate    = YES;
  condition = isArchived;
};
 DelegIsArchivedCond : WOConditional {
  condition = isArchived;
};

 DelegIsTeamParticipant: WOConditional {
  condition = isParticipantTeam;
  negate    = YES;
}

 DelegIsPersonParticipant: WOConditional {
  condition = isParticipantTeam;
  negate    = YES;
}

 DelegIsParticipantViewAllowed: WOConditional {
  condition = isParticipantViewAllowed;
}
 DelegIsParticipantViewAllowedElse: WOConditional {
  condition = isParticipantViewAllowed;
}
 DelegTeamName: WOString {
  value  = participantLabel;
}

 DelegMemberRepetition: WORepetition {
  list    = participantTeamMembers;
  item    = member;
}
 
 DelegMemberLink: WOHyperlink {
  directActionName = "activate";
  ?oid    = member.companyId;
  string  = teamMemberLabel;
}

 DelegMemberName: WOString {
  value = member.name;
}

/* enterprise stuff */

 DelegPartEnterpriseRep: WORepetition {
  list       = item.enterprises;
  item       = enterprise;
  separator  = ", ";
}
 DelegMemberEnterpriseRep: WORepetition {
  list       = member.enterprises;
  item       = enterprise;
  separator  = ", ";
}

 DelegEnterpriseName : WOHyperlink {
  directActionName = "activate";
  ?oid    = enterprise.companyId;
  string  = enterprise.description;
}

/* member values */

 DelegMemberFName: WOString {
  value  = member.firstname;
}
 DelegMemberFunction: WOString {
  value  = member.job_title;
}
 DelegMemberEmail: WOHyperlink {
  href   = memberEmail;
  string = member.email1;
}
 DelegMemberEmailAction: WOHyperlink {
  action = mailToMember;
  string = member.email1;
}
 DelegMemberDegree: WOString {
  value  = member.degree;
}
 DelegMemberTel: WOString {
  value  = member.01_tel;
}
 DelegDialTel: SkyDialNumber {
  number = member.01_tel;
}

/* participant values */

 DelegPartName: WOString {
  value  = item.name;
}
 DelegPartFName: WOString {
  value  = item.firstname;
}
 DelegPartFunction: WOString {
  value  = item.job_title;
}
 DelegPartEmail: WOHyperlink {
  href   = itemEmail;
  string = item.email1;
}
 DelegPartEmailAction: WOHyperlink {
  action = mailToItem;
  string = item.email1;
}
 DelegPartDegree: WOString {
  value  = item.degree;
}
 DelegPartRole: WOString {
  value = item.role;
}
 DelegPartStatus: SkyRichString {
  value = participantStatusLabel;
  color = participantStatusColor;
}
 DelegPartTel: WOString {
  value  = item.01_tel;
}
 DelegDialPartTel: SkyDialNumber {
  number = item.01_tel;
}

