// bind template to controller class

TitleContent: WOComponentContent {}

Title: LSWViewerTitle {
  title = enterprise.name;
}

CompanyAttrRep: WORepetition {
  list = attributes;
  item = currentAttr;
}

CurrentAttr: SkyAttribute {
  label       = currentAttrLabel;
  doTR        = YES;
  condition   = isInDefaults;
  keyColor    = "subAttributeCell";
  valueColor  = "subValueCell";
}

CurrentAttrValue: SkyObjectField {
  object     = company;
  attributes = currentAttr;
  labels     = labels;
}

IsCurrentVisible:    WOConditional { condition = isCurrentAttributeVisible; }
HideIfEmptyCond:     WOConditional { condition = doHideEmpty;               }
IsNotEmpty:          WOConditional { condition = isNotEmpty;                }
ShowAddressTypeCond: WOConditional { condition = showAddressType;           }
IsNotJobViewer:      WOConditional { condition = isJobViewer; negate = YES; }

DontHideIfEmptyCond: WOConditional {
  condition = doHideEmpty;
  negate    = YES;
}

PublicExtAttrRep: WORepetition {
  list = publicAttributes;
  item = currentAttr;
}
PrivateExtAttrRep: WORepetition {
  list = privateAttributes;
  item = currentAttr;
}

/* telephones */

TelephoneViewer: SkyTelephoneViewer {
  noTableAndTitle = YES;
  attributes      = patternValues;
  //telephones      = company.
  //telephones      = company.toTelephone;
  company         = company;
}

AddressTypeRepetition: WORepetition {
  list = addressTypes;
  item = addressType;
}

TypeCell: WOGenericContainer {
  elementName = "td";
  align       = "left";
  valign      = "top";
  bgcolor     = config.colors_subValueCell;
}

AddressType: SkyRichString {
  value  = addressTypeLabel;
  isBold = YES;
  face   = "Arial,Helvetica";
  size   = 2;
}

AddressViewer : LSWObjectViewer {
  labels         = labels;
  object         = address;
  attributeColor = "subAttributeCell";
  valueColor     = "subValueCell";
  attributes = (
    { key = "name1";   },
    { key = "name2";   },
    { key = "name3";   },
    { key = "street";  },
    { key = "city";    },
    { key = "zip";     },
    { key = "state";   },
    { key = "country"; }
  );
}

AttrSuffix: WOString {
  value = attributeSuffix;
}
